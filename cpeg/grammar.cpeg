-- An attempt at a CPEG metacompiler description

.SYNTAX CPEG

CPEG = '.SYNTAX' .ID RULES '.END' ;

RULS = $ RULE

RULE = { .ID '=' RULEEX ';' : RULE } ;

RULEEX = { EX1 : EXPRESSION } ;

EX1 = EX2 $ ( '/' EX2 ) ;

EX2 = EX3 $ EX3 ;

EX3 = .ID
    / .STRING
    / '.ID'
    / '.NUMBER'
    / '.STRING'
    / '(' EX1 ')'
    / '{' EX1 ':' .TYPE '}'
    / '.EMPTY'
    / '$' EX3 ;

.END

.COMPILE CPEG

-- provide the .OUT function for each TYPE

Built in types:

.ID -- { [a-zA-Z_][a-zA-Z_0-9]* : ID }
.TYPE -- { [a-zA-Z_][a-zA-Z_0-9]* : TYPE }
.STRING -- { '[^']' : STRING }
.NUMBER -- { [0-9]+ : NUMBER }
