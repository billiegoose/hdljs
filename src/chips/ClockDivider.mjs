import { ChipDef } from '../components/ChipDef.mjs';
export const ClockDivider = new ChipDef(`
CHIP ClockDivider {
  IN reset, max[16];
  OUT out;
  PARTS:
  PC(load=loop, inc=nloop, reset=reset, in=false, out=count);
  Equal(a=count, b=max, out=loop);
  Not(in=loop, out=nloop);

  Not(in=pout, out=nout);
  Mux(sel=reset, a=nout, b=false, out=bitin);
  Or(a=loop, b=reset, out=loadbit);
  Bit(in=bitin, load=loadbit, out=bitout);
  Mux(sel=reset, a=bitout, b=false, out=pout);
  Copy(in=pout, out=out);
}
`)
.test(`
|reset|       max        |out|
|  1  | 0000000000000000 | 0 |
|  0  | 0000000000000000 | 1 |
|  0  | 0000000000000000 | 0 |
|  0  | 0000000000000000 | 1 |
|  0  | 0000000000000000 | 0 |
|  1  | 0000000000000001 | 0 |
|  0  | 0000000000000001 | 0 |
|  0  | 0000000000000001 | 1 |
|  0  | 0000000000000001 | 1 |
|  0  | 0000000000000001 | 0 |
|  0  | 0000000000000001 | 0 |
|  0  | 0000000000000001 | 1 |
|  0  | 0000000000000001 | 1 |
|  0  | 0000000000000001 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 1 |
|  1  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 0 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 1 |
|  0  | 0000000000000011 | 1 |
`);
